module convert_to_bcd(
    input [15:0] value,
    output reg [15:0] s
);

always @ (*) begin
    integer v;
    reg [15:0] temp;
    reg [15:0] value_copy;
    
    value_copy = value;
    s = 16'b0; // Zainicjuj wyjście
    
    // Konwersja tysięcy
    for (v = 0; v < 10; v = v + 1) begin
        temp = value_copy;
        value_copy = value_copy - 1000;
        if (value_copy < 0) begin
            value_copy = temp;
            s[15:12] = v;
            // Zakończ pętlę
            v = 10;
        end
    end
    
    // Konwersja setek
    for (v = 0; v < 10; v = v + 1) begin
        temp = value_copy;
        value_copy = value_copy - 100;
        if (value_copy < 0) begin
            value_copy = temp;
            s[11:8] = v;
            // Zakończ pętlę
            v = 10;
        end
    end
    
    // Konwersja dziesiątek
    for (v = 0; v < 10; v = v + 1) begin
        temp = value_copy;
        value_copy = value_copy - 10;
        if (value_copy < 0) begin
            value_copy = temp;
            s[7:4] = v;
            // Zakończ pętlę
            v = 10;
        end
    end
    
    // Konwersja jedności
    for (v = 0; v < 10; v = v + 1) begin
        temp = value_copy;
        value_copy = value_copy - 1;
        if (value_copy < 0) begin
            value_copy = temp;
            s[3:0] = v;
            // Zakończ pętlę
            v = 10;
        end
    end
end

endmodule
