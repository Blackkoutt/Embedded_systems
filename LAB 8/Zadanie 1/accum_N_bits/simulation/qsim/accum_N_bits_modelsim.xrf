vendor_name = ModelSim
source_file = 1, C:/Users/Mateusz/Desktop/Systemy wbudowane/LAB 5/Zadanie 5/reg_N_bits_with_areset/reg_N_bits_with_areset.v
source_file = 1, C:/Users/Mateusz/Desktop/Systemy wbudowane/LAB 8/Zadanie 1/ripple_carry_adder/ripple_carry_adder.v
source_file = 1, C:/Users/Mateusz/Desktop/Systemy wbudowane/LAB 8/Zadanie 1/logic_circuit/logic_circuit.v
source_file = 1, C:/Users/Mateusz/Desktop/Systemy wbudowane/LAB 8/Zadanie 1/full_adder/full_adder.v
source_file = 1, C:/Users/Mateusz/Desktop/Systemy wbudowane/LAB 8/Zadanie 1/accum_N_bits/accum_N_bits.v
source_file = 1, C:/Users/Mateusz/Desktop/Systemy wbudowane/LAB 8/Zadanie 1/accum_N_bits/Waveform.vwf
source_file = 1, C:/Users/Mateusz/Desktop/Systemy wbudowane/LAB 8/Zadanie 1/accum_N_bits/db/accum_N_bits.cbx.xml
design_name = accum_N_bits
instance = comp, \A_reg_out[0]~output , A_reg_out[0]~output, accum_N_bits, 1
instance = comp, \A_reg_out[1]~output , A_reg_out[1]~output, accum_N_bits, 1
instance = comp, \A_reg_out[2]~output , A_reg_out[2]~output, accum_N_bits, 1
instance = comp, \A_reg_out[3]~output , A_reg_out[3]~output, accum_N_bits, 1
instance = comp, \A_reg_out[4]~output , A_reg_out[4]~output, accum_N_bits, 1
instance = comp, \A_reg_out[5]~output , A_reg_out[5]~output, accum_N_bits, 1
instance = comp, \A_reg_out[6]~output , A_reg_out[6]~output, accum_N_bits, 1
instance = comp, \A_reg_out[7]~output , A_reg_out[7]~output, accum_N_bits, 1
instance = comp, \S[0]~output , S[0]~output, accum_N_bits, 1
instance = comp, \S[1]~output , S[1]~output, accum_N_bits, 1
instance = comp, \S[2]~output , S[2]~output, accum_N_bits, 1
instance = comp, \S[3]~output , S[3]~output, accum_N_bits, 1
instance = comp, \S[4]~output , S[4]~output, accum_N_bits, 1
instance = comp, \S[5]~output , S[5]~output, accum_N_bits, 1
instance = comp, \S[6]~output , S[6]~output, accum_N_bits, 1
instance = comp, \S[7]~output , S[7]~output, accum_N_bits, 1
instance = comp, \carry~output , carry~output, accum_N_bits, 1
instance = comp, \overflow~output , overflow~output, accum_N_bits, 1
instance = comp, \clk~input , clk~input, accum_N_bits, 1
instance = comp, \clk~inputCLKENA0 , clk~inputCLKENA0, accum_N_bits, 1
instance = comp, \A[0]~input , A[0]~input, accum_N_bits, 1
instance = comp, \aclr~input , aclr~input, accum_N_bits, 1
instance = comp, \reg_A|out[0] , reg_A|out[0], accum_N_bits, 1
instance = comp, \A[1]~input , A[1]~input, accum_N_bits, 1
instance = comp, \reg_A|out[1] , reg_A|out[1], accum_N_bits, 1
instance = comp, \A[2]~input , A[2]~input, accum_N_bits, 1
instance = comp, \reg_A|out[2] , reg_A|out[2], accum_N_bits, 1
instance = comp, \A[3]~input , A[3]~input, accum_N_bits, 1
instance = comp, \reg_A|out[3] , reg_A|out[3], accum_N_bits, 1
instance = comp, \A[4]~input , A[4]~input, accum_N_bits, 1
instance = comp, \reg_A|out[4] , reg_A|out[4], accum_N_bits, 1
instance = comp, \A[5]~input , A[5]~input, accum_N_bits, 1
instance = comp, \reg_A|out[5] , reg_A|out[5], accum_N_bits, 1
instance = comp, \A[6]~input , A[6]~input, accum_N_bits, 1
instance = comp, \reg_A|out[6] , reg_A|out[6], accum_N_bits, 1
instance = comp, \A[7]~input , A[7]~input, accum_N_bits, 1
instance = comp, \reg_A|out[7] , reg_A|out[7], accum_N_bits, 1
instance = comp, \reg_S|out[0]~0 , reg_S|out[0]~0, accum_N_bits, 1
instance = comp, \reg_S|out[0] , reg_S|out[0], accum_N_bits, 1
instance = comp, \reg_S|out[0]~DUPLICATE , reg_S|out[0]~DUPLICATE, accum_N_bits, 1
instance = comp, \RCA|add[1].FA|s , RCA|add[1].FA|s, accum_N_bits, 1
instance = comp, \reg_S|out[1] , reg_S|out[1], accum_N_bits, 1
instance = comp, \reg_S|out[2] , reg_S|out[2], accum_N_bits, 1
instance = comp, \RCA|add[2].FA|s , RCA|add[2].FA|s, accum_N_bits, 1
instance = comp, \reg_S|out[2]~DUPLICATE , reg_S|out[2]~DUPLICATE, accum_N_bits, 1
instance = comp, \reg_S|out[3] , reg_S|out[3], accum_N_bits, 1
instance = comp, \RCA|add[2].FA|cout , RCA|add[2].FA|cout, accum_N_bits, 1
instance = comp, \RCA|add[3].FA|s , RCA|add[3].FA|s, accum_N_bits, 1
instance = comp, \reg_S|out[3]~DUPLICATE , reg_S|out[3]~DUPLICATE, accum_N_bits, 1
instance = comp, \RCA|add[4].FA|s , RCA|add[4].FA|s, accum_N_bits, 1
instance = comp, \reg_S|out[4] , reg_S|out[4], accum_N_bits, 1
instance = comp, \RCA|add[5].FA|s~0 , RCA|add[5].FA|s~0, accum_N_bits, 1
instance = comp, \RCA|add[5].FA|s , RCA|add[5].FA|s, accum_N_bits, 1
instance = comp, \reg_S|out[5] , reg_S|out[5], accum_N_bits, 1
instance = comp, \RCA|add[5].FA|cout~0 , RCA|add[5].FA|cout~0, accum_N_bits, 1
instance = comp, \reg_S|out[6] , reg_S|out[6], accum_N_bits, 1
instance = comp, \RCA|add[5].FA|cout~1 , RCA|add[5].FA|cout~1, accum_N_bits, 1
instance = comp, \RCA|add[6].FA|s , RCA|add[6].FA|s, accum_N_bits, 1
instance = comp, \reg_S|out[6]~DUPLICATE , reg_S|out[6]~DUPLICATE, accum_N_bits, 1
instance = comp, \reg_S|out[7] , reg_S|out[7], accum_N_bits, 1
instance = comp, \RCA|add[7].FA|s , RCA|add[7].FA|s, accum_N_bits, 1
instance = comp, \reg_S|out[7]~DUPLICATE , reg_S|out[7]~DUPLICATE, accum_N_bits, 1
instance = comp, \RCA|add[7].FA|cout , RCA|add[7].FA|cout, accum_N_bits, 1
instance = comp, \carry~reg0 , carry~reg0, accum_N_bits, 1
instance = comp, \check_overflow|overflow~0 , check_overflow|overflow~0, accum_N_bits, 1
instance = comp, \overflow~reg0 , overflow~reg0, accum_N_bits, 1
instance = comp, \~QUARTUS_CREATED_GND~I , ~QUARTUS_CREATED_GND~I, accum_N_bits, 1
