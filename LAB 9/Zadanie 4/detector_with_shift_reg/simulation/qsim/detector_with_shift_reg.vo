// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.0.0 Build 614 04/24/2018 SJ Lite Edition"

// DATE "05/06/2024 01:50:54"

// 
// Device: Altera 5CSEMA5F31C6 Package FBGA896
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module detector_with_shift_reg (
	clk,
	aclr,
	w,
	z);
input 	clk;
input 	aclr;
input 	w;
output 	z;

// Design Ports Information
// z	=>  Location: PIN_W22,	 I/O Standard: 2.5 V,	 Current Strength: Default
// w	=>  Location: PIN_AD27,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk	=>  Location: PIN_Y27,	 I/O Standard: 2.5 V,	 Current Strength: Default
// aclr	=>  Location: PIN_AE26,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \~QUARTUS_CREATED_GND~I_combout ;
wire \clk~input_o ;
wire \clk~inputCLKENA0_outclk ;
wire \w~input_o ;
wire \shift_reg0|state[0]~0_combout ;
wire \aclr~input_o ;
wire \WideAnd0~combout ;
wire \z~0_combout ;
wire [3:0] \shift_reg0|state ;
wire [3:0] \shift_reg1|state ;


// Location: IOOBUF_X89_Y8_N22
cyclonev_io_obuf \z~output (
	.i(\z~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(z),
	.obar());
// synopsys translate_off
defparam \z~output .bus_hold = "false";
defparam \z~output .open_drain_output = "false";
defparam \z~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOIBUF_X89_Y25_N21
cyclonev_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G10
cyclonev_clkena \clk~inputCLKENA0 (
	.inclk(\clk~input_o ),
	.ena(vcc),
	.outclk(\clk~inputCLKENA0_outclk ),
	.enaout());
// synopsys translate_off
defparam \clk~inputCLKENA0 .clock_type = "global clock";
defparam \clk~inputCLKENA0 .disable_mode = "low";
defparam \clk~inputCLKENA0 .ena_register_mode = "always enabled";
defparam \clk~inputCLKENA0 .ena_register_power_up = "high";
defparam \clk~inputCLKENA0 .test_syn = "high";
// synopsys translate_on

// Location: IOIBUF_X89_Y8_N55
cyclonev_io_ibuf \w~input (
	.i(w),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\w~input_o ));
// synopsys translate_off
defparam \w~input .bus_hold = "false";
defparam \w~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LABCELL_X88_Y8_N30
cyclonev_lcell_comb \shift_reg0|state[0]~0 (
// Equation(s):
// \shift_reg0|state[0]~0_combout  = ( !\w~input_o  )

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.datae(!\w~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\shift_reg0|state[0]~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \shift_reg0|state[0]~0 .extended_lut = "off";
defparam \shift_reg0|state[0]~0 .lut_mask = 64'hFFFF0000FFFF0000;
defparam \shift_reg0|state[0]~0 .shared_arith = "off";
// synopsys translate_on

// Location: IOIBUF_X89_Y8_N38
cyclonev_io_ibuf \aclr~input (
	.i(aclr),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\aclr~input_o ));
// synopsys translate_off
defparam \aclr~input .bus_hold = "false";
defparam \aclr~input .simulate_z_as = "z";
// synopsys translate_on

// Location: FF_X88_Y8_N32
dffeas \shift_reg0|state[0] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\shift_reg0|state[0]~0_combout ),
	.asdata(vcc),
	.clrn(\aclr~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\shift_reg0|state [0]),
	.prn(vcc));
// synopsys translate_off
defparam \shift_reg0|state[0] .is_wysiwyg = "true";
defparam \shift_reg0|state[0] .power_up = "low";
// synopsys translate_on

// Location: FF_X88_Y8_N35
dffeas \shift_reg0|state[1] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(gnd),
	.asdata(\shift_reg0|state [0]),
	.clrn(\aclr~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\shift_reg0|state [1]),
	.prn(vcc));
// synopsys translate_off
defparam \shift_reg0|state[1] .is_wysiwyg = "true";
defparam \shift_reg0|state[1] .power_up = "low";
// synopsys translate_on

// Location: FF_X88_Y8_N40
dffeas \shift_reg0|state[2] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(gnd),
	.asdata(\shift_reg0|state [1]),
	.clrn(\aclr~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\shift_reg0|state [2]),
	.prn(vcc));
// synopsys translate_off
defparam \shift_reg0|state[2] .is_wysiwyg = "true";
defparam \shift_reg0|state[2] .power_up = "low";
// synopsys translate_on

// Location: FF_X88_Y8_N38
dffeas \shift_reg0|state[3] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(gnd),
	.asdata(\shift_reg0|state [2]),
	.clrn(\aclr~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\shift_reg0|state [3]),
	.prn(vcc));
// synopsys translate_off
defparam \shift_reg0|state[3] .is_wysiwyg = "true";
defparam \shift_reg0|state[3] .power_up = "low";
// synopsys translate_on

// Location: FF_X88_Y8_N47
dffeas \shift_reg1|state[0] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(gnd),
	.asdata(\w~input_o ),
	.clrn(\aclr~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\shift_reg1|state [0]),
	.prn(vcc));
// synopsys translate_off
defparam \shift_reg1|state[0] .is_wysiwyg = "true";
defparam \shift_reg1|state[0] .power_up = "low";
// synopsys translate_on

// Location: FF_X88_Y8_N44
dffeas \shift_reg1|state[1] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(gnd),
	.asdata(\shift_reg1|state [0]),
	.clrn(\aclr~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\shift_reg1|state [1]),
	.prn(vcc));
// synopsys translate_off
defparam \shift_reg1|state[1] .is_wysiwyg = "true";
defparam \shift_reg1|state[1] .power_up = "low";
// synopsys translate_on

// Location: FF_X88_Y8_N52
dffeas \shift_reg1|state[2] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(gnd),
	.asdata(\shift_reg1|state [1]),
	.clrn(\aclr~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\shift_reg1|state [2]),
	.prn(vcc));
// synopsys translate_off
defparam \shift_reg1|state[2] .is_wysiwyg = "true";
defparam \shift_reg1|state[2] .power_up = "low";
// synopsys translate_on

// Location: FF_X88_Y8_N49
dffeas \shift_reg1|state[3] (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(gnd),
	.asdata(\shift_reg1|state [2]),
	.clrn(\aclr~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\shift_reg1|state [3]),
	.prn(vcc));
// synopsys translate_off
defparam \shift_reg1|state[3] .is_wysiwyg = "true";
defparam \shift_reg1|state[3] .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X88_Y8_N48
cyclonev_lcell_comb WideAnd0(
// Equation(s):
// \WideAnd0~combout  = ( \shift_reg1|state [2] & ( \shift_reg1|state [1] & ( (\shift_reg1|state [3] & \shift_reg1|state [0]) ) ) )

	.dataa(gnd),
	.datab(!\shift_reg1|state [3]),
	.datac(gnd),
	.datad(!\shift_reg1|state [0]),
	.datae(!\shift_reg1|state [2]),
	.dataf(!\shift_reg1|state [1]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\WideAnd0~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam WideAnd0.extended_lut = "off";
defparam WideAnd0.lut_mask = 64'h0000000000000033;
defparam WideAnd0.shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X88_Y8_N36
cyclonev_lcell_comb \z~0 (
// Equation(s):
// \z~0_combout  = ( \shift_reg0|state [2] & ( \shift_reg0|state [1] & ( ((\shift_reg0|state [3] & \shift_reg0|state [0])) # (\WideAnd0~combout ) ) ) ) # ( !\shift_reg0|state [2] & ( \shift_reg0|state [1] & ( \WideAnd0~combout  ) ) ) # ( \shift_reg0|state 
// [2] & ( !\shift_reg0|state [1] & ( \WideAnd0~combout  ) ) ) # ( !\shift_reg0|state [2] & ( !\shift_reg0|state [1] & ( \WideAnd0~combout  ) ) )

	.dataa(!\shift_reg0|state [3]),
	.datab(!\shift_reg0|state [0]),
	.datac(!\WideAnd0~combout ),
	.datad(gnd),
	.datae(!\shift_reg0|state [2]),
	.dataf(!\shift_reg0|state [1]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\z~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \z~0 .extended_lut = "off";
defparam \z~0 .lut_mask = 64'h0F0F0F0F0F0F1F1F;
defparam \z~0 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X37_Y39_N3
cyclonev_lcell_comb \~QUARTUS_CREATED_GND~I (
// Equation(s):

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\~QUARTUS_CREATED_GND~I_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \~QUARTUS_CREATED_GND~I .extended_lut = "off";
defparam \~QUARTUS_CREATED_GND~I .lut_mask = 64'h0000000000000000;
defparam \~QUARTUS_CREATED_GND~I .shared_arith = "off";
// synopsys translate_on

endmodule
