// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.0.0 Build 614 04/24/2018 SJ Lite Edition"

// DATE "03/13/2024 23:00:36"

// 
// Device: Altera 5CSEMA5F31C6 Package FBGA896
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module mux_4_1_1_bit (
	u,
	v,
	w,
	x,
	s,
	m);
input 	u;
input 	v;
input 	w;
input 	x;
input 	[1:0] s;
output 	m;

// Design Ports Information
// m	=>  Location: PIN_Y26,	 I/O Standard: 2.5 V,	 Current Strength: Default
// u	=>  Location: PIN_AB27,	 I/O Standard: 2.5 V,	 Current Strength: Default
// v	=>  Location: PIN_AE29,	 I/O Standard: 2.5 V,	 Current Strength: Default
// w	=>  Location: PIN_AD30,	 I/O Standard: 2.5 V,	 Current Strength: Default
// x	=>  Location: PIN_AD29,	 I/O Standard: 2.5 V,	 Current Strength: Default
// s[0]	=>  Location: PIN_AA26,	 I/O Standard: 2.5 V,	 Current Strength: Default
// s[1]	=>  Location: PIN_Y27,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \~QUARTUS_CREATED_GND~I_combout ;
wire \u~input_o ;
wire \v~input_o ;
wire \s[0]~input_o ;
wire \s[1]~input_o ;
wire \x~input_o ;
wire \w~input_o ;
wire \mux_uvwx|m~0_combout ;


// Location: IOOBUF_X89_Y25_N5
cyclonev_io_obuf \m~output (
	.i(\mux_uvwx|m~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(m),
	.obar());
// synopsys translate_off
defparam \m~output .bus_hold = "false";
defparam \m~output .open_drain_output = "false";
defparam \m~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOIBUF_X89_Y23_N21
cyclonev_io_ibuf \u~input (
	.i(u),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\u~input_o ));
// synopsys translate_off
defparam \u~input .bus_hold = "false";
defparam \u~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X89_Y23_N38
cyclonev_io_ibuf \v~input (
	.i(v),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\v~input_o ));
// synopsys translate_off
defparam \v~input .bus_hold = "false";
defparam \v~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X89_Y23_N4
cyclonev_io_ibuf \s[0]~input (
	.i(s[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\s[0]~input_o ));
// synopsys translate_off
defparam \s[0]~input .bus_hold = "false";
defparam \s[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X89_Y25_N21
cyclonev_io_ibuf \s[1]~input (
	.i(s[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\s[1]~input_o ));
// synopsys translate_off
defparam \s[1]~input .bus_hold = "false";
defparam \s[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X89_Y23_N55
cyclonev_io_ibuf \x~input (
	.i(x),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\x~input_o ));
// synopsys translate_off
defparam \x~input .bus_hold = "false";
defparam \x~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X89_Y25_N38
cyclonev_io_ibuf \w~input (
	.i(w),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\w~input_o ));
// synopsys translate_off
defparam \w~input .bus_hold = "false";
defparam \w~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LABCELL_X88_Y23_N0
cyclonev_lcell_comb \mux_uvwx|m~0 (
// Equation(s):
// \mux_uvwx|m~0_combout  = ( \x~input_o  & ( \w~input_o  & ( ((!\s[0]~input_o  & (\u~input_o )) # (\s[0]~input_o  & ((\v~input_o )))) # (\s[1]~input_o ) ) ) ) # ( !\x~input_o  & ( \w~input_o  & ( (!\s[0]~input_o  & (((\s[1]~input_o )) # (\u~input_o ))) # 
// (\s[0]~input_o  & (((\v~input_o  & !\s[1]~input_o )))) ) ) ) # ( \x~input_o  & ( !\w~input_o  & ( (!\s[0]~input_o  & (\u~input_o  & ((!\s[1]~input_o )))) # (\s[0]~input_o  & (((\s[1]~input_o ) # (\v~input_o )))) ) ) ) # ( !\x~input_o  & ( !\w~input_o  & ( 
// (!\s[1]~input_o  & ((!\s[0]~input_o  & (\u~input_o )) # (\s[0]~input_o  & ((\v~input_o ))))) ) ) )

	.dataa(!\u~input_o ),
	.datab(!\v~input_o ),
	.datac(!\s[0]~input_o ),
	.datad(!\s[1]~input_o ),
	.datae(!\x~input_o ),
	.dataf(!\w~input_o ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\mux_uvwx|m~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \mux_uvwx|m~0 .extended_lut = "off";
defparam \mux_uvwx|m~0 .lut_mask = 64'h5300530F53F053FF;
defparam \mux_uvwx|m~0 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X30_Y26_N0
cyclonev_lcell_comb \~QUARTUS_CREATED_GND~I (
// Equation(s):

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\~QUARTUS_CREATED_GND~I_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \~QUARTUS_CREATED_GND~I .extended_lut = "off";
defparam \~QUARTUS_CREATED_GND~I .lut_mask = 64'h0000000000000000;
defparam \~QUARTUS_CREATED_GND~I .shared_arith = "off";
// synopsys translate_on

endmodule
